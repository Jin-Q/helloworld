#set ($tableModelName=${TableModel.tableId})
#set($lowerName=${tableModelName.toLowerCase()})
#set ($filterSize=${TableModel.getFilterFieldsSize()})
#set ($conSize=${TableModel.getConditionFieldsSize()})
#set ($query=${TableModel.getRecordRestrict("query")})
#set ($isPaged=${TableModel.isPaged()})
package com.yucheng.cmis.ops.${packageName}${lowerName};

import java.sql.Connection;
#if(${filterSize}>0)
import java.util.List;
import java.util.ArrayList;	
#end

import com.ecc.emp.core.Context;
import com.ecc.emp.core.EMPException;
import com.ecc.emp.data.IndexedCollection;
import com.ecc.emp.data.KeyedCollection;
#if(${isPaged}==true)
import com.ecc.emp.dbmodel.PageInfo;	
#end
#if(${query}==true)
import com.ecc.emp.dbmodel.service.RecordRestrict;	
#end
import com.ecc.emp.dbmodel.service.TableModelDAO;
import com.yucheng.cmis.operation.CMISOperation;
import com.yucheng.cmis.util.TableModelUtil;

public class Query${tableModelName}ListOp extends CMISOperation {
	
	private final String modelId = "${tableModelName}";
	
	public String doExecute(Context context) throws EMPException {
		
		Connection connection = null;
		try{
			connection = this.getConnection(context);
		
			KeyedCollection queryData = null;
			try {
				queryData = (KeyedCollection)context.getDataElement(this.modelId);
			} catch (Exception e) {}
			
		String conditionStr = TableModelUtil.getQueryCondition(this.modelId, queryData, context, false, false, false)
								+"${TableModel.orderString}";;
			
#if(${query}==true)
			RecordRestrict recordRestrict = this.getRecordRestrict(context);
			conditionStr = recordRestrict.judgeQueryRestrict(this.modelId, conditionStr, context, connection);
#end
#if(${isPaged}==true)
		int size = ${TableModel.pageSize};
		PageInfo pageInfo = TableModelUtil.createPageInfo(context, "one", String.valueOf(size));
		
		TableModelDAO dao = (TableModelDAO)this.getTableModelDAO(context);
		
#if(${filterSize}>0)
		List list = new ArrayList();
#foreach(${filter} in ${TableModel.filterFields})
		list.add("${filter}");
#end
#foreach(${pkWra} in ${TableModel.getPKOutFilter()})
		list.add("${pkWra.id}");
#end
		IndexedCollection iColl = dao.queryList(modelId,list ,conditionStr,pageInfo,connection);
#else
		IndexedCollection iColl = dao.queryList(modelId, null,conditionStr,pageInfo,connection);
#end
		iColl.setName(iColl.getName()+"List");
		this.putDataElement2Context(iColl, context);
		TableModelUtil.parsePageInfo(context, pageInfo);

#else
		TableModelDAO dao = (TableModelDAO)this.getTableModelDAO(context);
#if(${filterSize}>0)
		List list = new ArrayList();
#foreach(${filter} in ${TableModel.filterFields})
		list.add("${filter}");
#end
#foreach(${pkWra} in ${TableModel.getPKOutFilter()})
		list.add("${pkWra.id}");
#end
		IndexedCollection iColl = dao.queryList(modelId,list,conditionStr,connection);
		iColl.setName(iColl.getName()+"List");
		this.putDataElement2Context(iColl, context);
#else
		IndexedCollection iColl = dao.queryList(modelId, null,conditionStr,connection);
		iColl.setName(iColl.getName()+"List");
		this.putDataElement2Context(iColl, context);
			
#end
#end
		}catch (EMPException ee) {
			throw ee;
		} catch(Exception e){
			throw new EMPException(e);
		} finally {
			if (connection != null)
				this.releaseConnection(context, connection);
		}
		return "0";
	}

}
