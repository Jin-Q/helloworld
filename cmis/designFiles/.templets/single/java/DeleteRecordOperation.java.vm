#set ($tableModelName=${TableModel.tableId})
#set($lowerName=${tableModelName.toLowerCase()})
#set($pkList=${TableModel.getPks()})
#set($delete=${TableModel.getRecordRestrict("delete")})
package com.yucheng.cmis.ops.${packageName}${lowerName};

import java.sql.Connection;
#if(${pkList.size()}>1)
import java.util.HashMap;
import java.util.Map;
#end

import com.ecc.emp.core.Context;
import com.ecc.emp.core.EMPException;
#if(${delete}==true)
import com.ecc.emp.dbmodel.service.RecordRestrict;
#end
import com.ecc.emp.dbmodel.service.TableModelDAO;
import com.ecc.emp.jdbc.EMPJDBCException;
import com.yucheng.cmis.operation.CMISOperation;

public class Delete${tableModelName}RecordOp extends CMISOperation {

	private final String modelId = "${tableModelName}";
	

#foreach(${pk} in ${pkList})
	private final String ${pk}_name = "${pk}";
#end	

	public String doExecute(Context context) throws EMPException {
		Connection connection = null;
		try{
			connection = this.getConnection(context);


#if(${delete}==true)
			
			RecordRestrict recordRestrict = this.getRecordRestrict(context);
			recordRestrict.judgeDeleteRestrict(this.modelId, context, connection);
#end

#foreach(${pk} in ${pkList})
			String ${pk}_value = null;
			try {
				${pk}_value = (String)context.getDataValue(${pk}_name);
			} catch (Exception e) {}
			if(${pk}_value == null || ${pk}_value.length() == 0)
				throw new EMPJDBCException("The value of pk["+${pk}_name+"] cannot be null!");
				
#end


			TableModelDAO dao = this.getTableModelDAO(context);
#if(${pkList.size()}==1)
			int count=dao.deleteByPk(modelId, ${pkList.get(0)}_value, connection);
#else
			Map pkMap = new HashMap();
#foreach(${pk} in ${pkList})
			pkMap.put("${pk}",${pk}_value);
#end
			int count=dao.deleteByPks(modelId, pkMap, connection);
#end
			if(count!=1){
				throw new EMPException("Remove Failed! Records :"+count);
			}
			
		}catch (EMPException ee) {
			throw ee;
		} catch(Exception e){
			throw new EMPException(e);
		} finally {
			if (connection != null)
				this.releaseConnection(context, connection);
		}
		return "0";
	}
}
