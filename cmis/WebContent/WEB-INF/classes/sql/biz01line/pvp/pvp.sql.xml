<?xml version="1.0" encoding="UTF-8"?>
<S>
<!-- 通过合同编号判断PVP_AUTOCODE表中是否有该合同生成借据记录 -->
<SQL id="isHasRecord" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection" onlyReturnFirst="false">
  <SELECT>
  <![CDATA[
	 SELECT CONT_NO,SERNUM FROM PVP_AUTOCODE WHERE CONT_NO = ${_SIG_VALUE}
  ]]>
  </SELECT>
</SQL>
<!-- 往PVP_AUTOCODE表中插入新记录-->
<SQL id="insertPvpAutocode" parameterClass="java.lang.String"  valueClass ="java.lang.String">
  <SELECT>
  <![CDATA[
	INSERT INTO PVP_AUTOCODE(CONT_NO,SERNUM) VALUES(${_SIG_VALUE},'1')
  ]]>
  </SELECT>
</SQL>
<!-- 更新PVP_AUTOCODE表中序列号记录-->
<SQL id="updatePvpAutocode" parameterClass="java.lang.String"  valueClass ="java.lang.String">
  <SELECT>
  <![CDATA[
  	UPDATE PVP_AUTOCODE SET SERNUM = ${_SIG_VALUE} WHERE CONT_NO = ${_SIG_VALUE}
  ]]>
  </SELECT>
</SQL>

<!-- 通过合同编号查询业务编号-->
<SQL id="selectSernoByContNo" parameterClass="java.lang.String"  resultClass ="com.ecc.emp.data.KeyedCollection">
  <SELECT>
  <![CDATA[
  	SELECT * FROM CTR_LOAN_CONT WHERE CONT_NO= ${_SIG_VALUE}
  ]]>
  </SELECT>
</SQL>

<!-- 撤销授权，修改授权状态 -->
<SQL id="updatePvpAuthorizeForCancel"  parameterClass="java.lang.String" valueClass ="java.lang.String" >
  <DELETE>
  <![CDATA[ 
	update pvp_authorize a set a.status = ${_SIG_VALUE} where a.authorize_no = ${_SIG_VALUE}
  ]]>
  </DELETE>
</SQL>

<!-- 银承出账更新合同到期日 -->
<SQL id="updateCtrDate4Accp"  parameterClass="java.lang.String" valueClass ="java.lang.String" >
  <DELETE>
  <![CDATA[ 
	update ctr_loan_cont a set a.cont_end_date=(select max(porder_end_date) from acc_accp acc where acc.cont_no=${_SIG_VALUE}),
	a.cont_start_date=(select openday from pub_sys_info) where a.cont_no=${_SIG_VALUE}
  ]]>
  </DELETE>
</SQL>

<!-- 如果为承诺函下，更新承诺函借据余额  -->
<SQL id="updateContBalanceByContNo" parameterClass="java.lang.String" valueClass="java.math.BigDecimal">
   <UPDATE>
  <![CDATA[
	update ctr_loan_cont a set a.cont_balance = a.cont_balance + ${_SIG_VALUE} where a.cont_no = ${_SIG_VALUE}
  ]]>
   </UPDATE>
</SQL>

<!-- 撤销授权，删除贷款台账信息  -->
<SQL id="deleteAccLoanForCancel" parameterClass="java.lang.String" >
   <DELETE>
  <![CDATA[
  	delete from acc_loan a where a.bill_no in (select b.bill_no from pvp_authorize b where b.authorize_no = ${_SIG_VALUE})
  ]]>
   </DELETE>
</SQL>

<!-- 撤销授权，删除银承台账信息  -->
<SQL id="deleteAccAccpForCancel" parameterClass="java.lang.String" >
   <DELETE>
  <![CDATA[
  	delete from acc_accp a where a.bill_no in (select b.bill_no from pvp_authorize b where b.authorize_no = ${_SIG_VALUE})
  ]]>
   </DELETE>
</SQL>

<!-- 撤销授权，修改票据包状态 -->
<SQL id="updateIqpBatchMngForCancel"  parameterClass="java.lang.String" valueClass ="java.lang.String" >
  <DELETE>
  <![CDATA[ 
	update iqp_batch_mng a set a.status = ${_SIG_VALUE} where a.batch_no = ${_SIG_VALUE}
  ]]>
  </DELETE>
</SQL>

<!-- 撤销授权，修改票据明细表状态 -->
<SQL id="updateIqpBillDetailForCancel"  parameterClass="java.lang.String" valueClass ="java.lang.String" >
  <DELETE>
  <![CDATA[ 
	update iqp_bill_detail a set a.status = ${_SIG_VALUE} where a.batch_no = ${_SIG_VALUE}
  ]]>
  </DELETE>
</SQL>

<!-- 撤销授权，删除票据流水台账信息  -->
<SQL id="deleteAccDrftForCancel" parameterClass="java.lang.String" >
   <DELETE>
  <![CDATA[
  	delete from acc_drft a where a.bill_no in (select b.bill_no from pvp_authorize b where b.authorize_no = ${_SIG_VALUE})
  ]]>
   </DELETE>
</SQL>

<!-- 撤销授权，删除资产转让台账信息  -->
<SQL id="deleteAccAssetstrsfForCancel" parameterClass="java.lang.String" >
   <DELETE>
  <![CDATA[
  	delete from acc_assetstrsf a where a.bill_no in (select b.bill_no from pvp_authorize b where b.authorize_no = ${_SIG_VALUE})
  ]]>
   </DELETE>
</SQL>

<!-- 撤销授权，删除资产流转台账信息  -->
<SQL id="deleteAccAssetTransForCancel" parameterClass="java.lang.String" >
   <DELETE>
  <![CDATA[
  	delete from acc_asset_trans a where a.bill_no in (select b.bill_no from pvp_authorize b where b.authorize_no = ${_SIG_VALUE})
  ]]>
   </DELETE>
</SQL>

<!-- 展期撤销授权，修改展期次数和到期日期 -->
<SQL id="updateAccLoanForCancelExtend"  parameterClass="java.lang.String" valueClass ="java.lang.String" >
  <DELETE>
  <![CDATA[ 
	update acc_loan a set a.end_date = a.ori_end_date, a.post_count = a.post_count - 1 where a.bill_no = ${_SIG_VALUE})
  ]]>
  </DELETE>
</SQL>

<!-- 通过行号查询地址信息 -->
<SQL id="queryCoreZfxtZbByBnkcode" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection" >
   <SELECT>
  <![CDATA[
  select a.addr from prd_bank_info a where a.bank_no = ${_SIG_VALUE}
  ]]>
   </SELECT>
</SQL>

<!-- 根据流水号更新流程节点状态（合同撤销时使用）-->
<SQL id="updateWfstatusForCont" parameterClass="java.lang.String"  valueClass ="java.lang.String">
  <SELECT>
  <![CDATA[
  	UPDATE wf_instance_whole_property SET wfstatus = ${_SIG_VALUE} WHERE instanceid = (select instanceid from wfi_join where pk_value = ${_SIG_VALUE})
  ]]>
  </SELECT>
</SQL>

<!-- 根据合同编号查询第三方客户码 -->
<SQL id="getThirdCusIdByContNo" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection" >
   <SELECT>
  <![CDATA[
  	SELECT P2.CUS_ID
  			FROM R_BUS_LMTCREDIT_INFO P1,
       		(SELECT CUS_ID, AGR_NO FROM LMT_INTBANK_ACC
        UNION ALL
             SELECT CUS_ID, AGR_NO FROM LMT_AGR_JOINT_COOP
        UNION ALL
             SELECT CUS_ID, AGR_NO FROM LMT_AGR_FIN_GUAR
        UNION ALL
             SELECT CUS_ID, LIMIT_CODE AGR_NO FROM LMT_AGR_DETAILS) P2
              WHERE P1.AGR_NO = P2.AGR_NO AND p1.CONT_NO = ${_SIG_VALUE}
   ]]>
   </SELECT>
</SQL>

<!-- 撤销授权，删除银承台账信息 added yangzy 2015/02/10 电票撤回增加删除未生效台账  -->
<SQL id="deleteAccAccpForECDSCancel" parameterClass="java.lang.String" >
   <DELETE>
  <![CDATA[
  	delete from acc_accp a where a.cont_no = ${_SIG_VALUE}
  ]]>
   </DELETE>
</SQL>
<!-- 撤销授权，删除贴现台账信息 added yangzy 2015/02/10 电票撤回增加删除未生效台账  -->
<SQL id="deleteAccDrftForECDSCancel" parameterClass="java.lang.String" >
   <DELETE>
  <![CDATA[
  	delete from acc_drft a where a.cont_no = ${_SIG_VALUE}
  ]]>
   </DELETE>
</SQL>

<!-- added by yangzy 2015/03/25 需求：XD150325024，集中作业扫描岗权限改造—自动授权-获取授权数据 -->
<SQL id="getPvpAutoAuthorizeInfo" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection">
    <SELECT> 
  <![CDATA[
			select tran_serno, authorize_no, tran_id, status
			  from (select tran_serno,
			               authorize_no,
			               tran_id,
			               status,
			               row_number() over(partition by authorize_no order by tran_serno asc) rn
			          from pvp_authorize
			         where not exists
			         (select 1
			                  from pvp_auto_authorize
			                 where pvp_authorize.authorize_no =
			                       pvp_auto_authorize.authorize_no
			                   and pvp_authorize.status = pvp_auto_authorize.status)
			           and tran_id not in
			               ('0200200001201', '0200100000302','0200100000101')
			           and status in ('00', '01'))
			 where rn = 1
  ]]>
    </SELECT>
</SQL>
<!-- added by yangzy 2015/03/25 需求：XD150325024，集中作业扫描岗权限改造—自动授权-插入主动授权记录表 -->
<SQL id="insertPvpAutoAuthorize" parameterClass="java.lang.String" valueClass ="java.util.HashMap" >
   <INSERT>
  <![CDATA[
	insert into pvp_auto_authorize (authorize_no, status, tran_date) 
	values (${authorize_no},${status},${tran_date})
  ]]>
   </INSERT>
</SQL>

<!-- add by lisj 2015-8-26  需求编号：【XD150303015】 关于增加对被放款审查岗打回的业务申请信息进行修改流程需求  begin-->
<SQL id="queryModifyHis4IEAList" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection">
    <SELECT> 
  <![CDATA[
	select p1.agr_no,
       p1.cn_cont_no,
       p2.cn_cont_no     pm_cn_cont_no,
       p1.extension_date,
       p1.extension_rate,
       p2.extension_date pm_extension_date,
       p2.extension_rate pm_extension_rate,
       p3.update_time
    from iqp_extension_agr_tmp p1, iqp_extension_agr_his p2,pvp_biz_modify_rel p3
 		where p1.agr_no = p2.agr_no
       		and p1.modify_rel_serno = p3.modify_rel_serno
			and p2.modify_rel_serno = p3.modify_rel_serno
			and p3.approve_status <>'998'
   			and p1.modify_rel_serno =${_SIG_VALUE}
	 	order by p3.update_time asc
  ]]>
    </SELECT>
</SQL>

<SQL id="queryModifyHisList" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection">
    <SELECT> 
  <![CDATA[
	select p1.cont_no,
    p1.cus_id,
     p1.serno,
       p1.prd_id,
       (select pb.prdname from prd_basicinfo pb where pb.prdid = p1.prd_id) as prdname,
       p1.cn_cont_no,
       p2.cn_cont_no pm_cn_cont_no,
       (p3.cont_term || (select s.cnname
                           from s_dic s
                          where s.opttype = 'STD_ZB_TERM_TYPE'
                            and s.enname = p3.term_type)) as term,
        
       (p4.cont_term || (select s.cnname
                           from s_dic s
                          where s.opttype = 'STD_ZB_TERM_TYPE'
                            and s.enname = p4.term_type)) as pm_term,
      p1.security_rate,
      p2.security_rate pm_security_rate,
      p3.pay_type,
      p4.pay_type pm_pay_type,
      (select prm.repay_mode_dec
          from prd_repay_mode prm
         where prm.repay_mode_id = p3.repay_type) as repay_type,
       (select prm.repay_mode_dec
          from prd_repay_mode prm
         where prm.repay_mode_id = p4.repay_type) as pm_repay_type,
      p3.interest_term,
      p4.interest_term pm_interest_term,
      p3.ir_accord_type,
      p4.ir_accord_type pm_ir_accord_type,
      p3.ir_float_type,
      p4.ir_float_type pm_ir_float_type,
      p3.ir_float_rate,
      p4.ir_float_rate pm_ir_float_rate,
      p3.ir_adjust_type,
      p4.ir_adjust_type pm_ir_adjust_type,
      p3.overdue_float_type,
      p4.overdue_float_type pm_overdue_float_type,
      p3.overdue_rate,
      p4.overdue_rate pm_overdue_rate,
      p3.default_float_type,
      p4.default_float_type pm_default_float_type,
      p3.default_rate,
      p4.default_rate pm_default_rate,
      p3.limit_useed_type,
      p4.limit_useed_type pm_limit_useed_type,
      p3.repay_space,
	  p4.repay_space pm_repay_space,
	  p3.repay_term,
	  p4.repay_term pm_repay_term
  from ctr_loan_cont_tmp     p1,
       ctr_loan_cont_his     p2,
       ctr_loan_cont_sub_tmp p3,
       ctr_loan_cont_sub_his p4,
			 pvp_biz_modify_rel p5
 where p1.modify_rel_serno = p2.modify_rel_serno
   and p2.modify_rel_serno = p4.modify_rel_serno
   and p1.modify_rel_serno = p3.modify_rel_serno
   and p3.modify_rel_serno = p4.modify_rel_serno
   and p1.modify_rel_serno = p5.modify_rel_serno
   and p2.modify_rel_serno = p5.modify_rel_serno
   and p5.approve_status <>'998'
   and p1.modify_rel_serno=${_SIG_VALUE}
  ]]>
    </SELECT>
</SQL>

<SQL id="queryFreedomPayInfoModifyHisList" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection">
    <SELECT> 
  <![CDATA[
select *
  from ((select *
           from iqp_freedom_pay_info_tmp
          where modify_rel_serno = ${_SIG_VALUE}
         minus
         select *
           from iqp_freedom_pay_info_his
          where modify_rel_serno = ${_SIG_VALUE}) union all
        (select *
           from iqp_freedom_pay_info_his
          where modify_rel_serno = ${_SIG_VALUE}
         minus
         select *
           from iqp_freedom_pay_info_tmp
          where modify_rel_serno = ${_SIG_VALUE}))
  ]]>
    </SELECT>
</SQL>

<SQL id="queryIqpAccpInfo" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection">
    <SELECT> 
  <![CDATA[
	select distinct p3.serno,p3.actp_org_no,p3.actp_org_name
  from iqp_accp_detail_tmp  p1,
       iqp_accp_detail_his p2,
       iqp_acc_accp p3,
			 pvp_biz_modify_rel p4
 where  p1.modify_rel_serno  =  p2.modify_rel_serno
    and p1.modify_rel_serno = p4.modify_rel_serno
	and p2.modify_rel_serno = p4.modify_rel_serno
    and p1.serno = p3.serno
    and p2.serno =p3.serno
    and p4.approve_status <>'998'
    and p1.modify_rel_serno =${_SIG_VALUE}
  ]]>
    </SELECT>
</SQL>

<SQL id="queryIqpAccpDetailInfo" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection">
    <SELECT> 
  <![CDATA[
	select distinct p1.pk1,
                p1.clt_person,
                (p1.term || (select s.cnname
                               from s_dic s
                              where s.opttype = 'STD_ZB_TERM_TYPE'
                                and s.enname = p1.term_type)) as term,
                p2.clt_person pm_clt_person,
                (p2.term || (select s.cnname
                               from s_dic s
                              where s.opttype = 'STD_ZB_TERM_TYPE'
                                and s.enname = p2.term_type)) as pm_term
  from iqp_accp_detail_tmp p1,
       iqp_accp_detail_his p2,
       pvp_biz_modify_rel  p3
 where p1.modify_rel_serno = p2.modify_rel_serno
   and p1.modify_rel_serno = p3.modify_rel_serno
   and p2.modify_rel_serno = p3.modify_rel_serno
   and p1.pk1 = p2.pk1
   and p3.approve_status <> '998'
   and p1.pk1 in
       (select pk1
          from (select modify_rel_serno,
                       pk1,
                       serno,
                       clt_person,
                       term_type,
                       term
                  from iqp_accp_detail_tmp
                 where modify_rel_serno = ${_SIG_VALUE}
                minus
                select modify_rel_serno,
                       pk1,
                       serno,
                       clt_person,
                       term_type,
                       term
                  from iqp_accp_detail_his
                 where modify_rel_serno = ${_SIG_VALUE}))
   and p1.modify_rel_serno = ${_SIG_VALUE}

    ]]>
    </SELECT>
</SQL>

<!-- 根据serno删除保证金信息 -->
<SQL id="deletePubBailInfoByS"  parameterClass="com.ecc.emp.data.KeyedCollection" >
  <DELETE>
  <![CDATA[
 	DELETE FROM PUB_BAIL_INFO P WHERE P.SERNO =${serno}
  ]]>
  </DELETE>
</SQL>

<!-- 根据serno删除附加条款信息 -->
<SQL id="deleteIqpAppendTermsByS"  parameterClass="com.ecc.emp.data.KeyedCollection" >
  <DELETE>
  <![CDATA[
 	DELETE FROM IQP_APPEND_TERMS P WHERE P.SERNO =${serno}
  ]]>
  </DELETE>
</SQL>

<!-- 根据modify_rel_serno删除银承汇票明细缓存信息 -->
<SQL id="deleteIqpAccpDetailTmpByM"  parameterClass="com.ecc.emp.data.KeyedCollection" >
  <DELETE>
  <![CDATA[
 	DELETE FROM IQP_ACCP_DETAIL_TMP P WHERE P.MODIFY_REL_SERNO =${modify_rel_serno}
  ]]>
  </DELETE>
</SQL>

<!-- 根据modify_rel_serno删除银承汇票明细备份信息 -->
<SQL id="deleteIqpAccpDetailHisByM"  parameterClass="com.ecc.emp.data.KeyedCollection" >
  <DELETE>
  <![CDATA[
 	DELETE FROM IQP_ACCP_DETAIL_HIS P WHERE P.MODIFY_REL_SERNO =${modify_rel_serno}
  ]]>
  </DELETE>
</SQL>

<!-- 根据modify_rel_serno删除保证金缓存信息 -->
<SQL id="deletePubBailInfoTmpByM"  parameterClass="com.ecc.emp.data.KeyedCollection" >
  <DELETE>
  <![CDATA[
 	DELETE FROM PUB_BAIL_INFO_TMP P WHERE P.MODIFY_REL_SERNO =${modify_rel_serno}
  ]]>
  </DELETE>
</SQL>

<!-- 根据modify_rel_serno删除保证金备份信息 -->
<SQL id="deletePubBailInfoHisByM"  parameterClass="com.ecc.emp.data.KeyedCollection" >
  <DELETE>
  <![CDATA[
 	DELETE FROM PUB_BAIL_INFO_HIS P WHERE P.MODIFY_REL_SERNO =${modify_rel_serno}
  ]]>
  </DELETE>
</SQL>

<!-- 根据modify_rel_serno,serno,bail_acct_no删除保证金缓存信息 -->
<SQL id="deletePubBailInfoTmpByMSB"  parameterClass="com.ecc.emp.data.KeyedCollection" >
  <DELETE>
  <![CDATA[
 	DELETE FROM PUB_BAIL_INFO_TMP P WHERE P.MODIFY_REL_SERNO =${modify_rel_serno} and P.SERNO=${serno} and P.BAIL_ACCT_NO=${bail_acct_no}
  ]]>
  </DELETE>
</SQL>


<!-- 根据modify_rel_serno删除附加条款缓存信息 -->
<SQL id="deleteIqpAppendTermsTmpByM"  parameterClass="com.ecc.emp.data.KeyedCollection" >
  <DELETE>
  <![CDATA[
 	DELETE FROM IQP_APPEND_TERMS_TMP P WHERE P.MODIFY_REL_SERNO =${modify_rel_serno}
  ]]>
  </DELETE>
</SQL>

<!-- 根据modify_rel_serno删除附加条款备份信息 -->
<SQL id="deleteIqpAppendTermsHisByM"  parameterClass="com.ecc.emp.data.KeyedCollection" >
  <DELETE>
  <![CDATA[
 	DELETE FROM IQP_APPEND_TERMS_HIS P WHERE P.MODIFY_REL_SERNO =${modify_rel_serno}
  ]]>
  </DELETE>
</SQL>

<!-- 根据modify_rel_serno删除附加条款备份信息 -->
<SQL id="deleteIqpAppendTermsTmpByMP"  parameterClass="com.ecc.emp.data.KeyedCollection" >
  <DELETE>
  <![CDATA[
 	DELETE FROM IQP_APPEND_TERMS_TMP P WHERE P.MODIFY_REL_SERNO =${modify_rel_serno} and P.APPEND_TERMS_PK = ${append_terms_pk}
  ]]>
  </DELETE>
</SQL>

<!-- 根据modify_rel_serno删除还款计划登记缓存信息 -->
<SQL id="deleteIqpFreedomPayInfoTmpByM"  parameterClass="com.ecc.emp.data.KeyedCollection" >
  <DELETE>
  <![CDATA[
 	DELETE FROM IQP_FREEDOM_PAY_INFO_TMP P WHERE P.MODIFY_REL_SERNO =${modify_rel_serno}
  ]]>
  </DELETE>
</SQL>

<!-- 根据modify_rel_serno删除还款计划登记备份信息 -->
<SQL id="deleteIqpFreedomPayInfoHisByM"  parameterClass="com.ecc.emp.data.KeyedCollection" >
  <DELETE>
  <![CDATA[
 	DELETE FROM IQP_FREEDOM_PAY_INFO_HIS P WHERE P.MODIFY_REL_SERNO =${modify_rel_serno}
  ]]>
  </DELETE>
</SQL>

<!-- 根据modify_rel_serno删除账户信息缓存信息 -->
<SQL id="deleteIqpCusAcctTmpByM"  parameterClass="com.ecc.emp.data.KeyedCollection" >
  <DELETE>
  <![CDATA[
 	DELETE FROM IQP_CUS_ACCT_TMP P WHERE P.MODIFY_REL_SERNO =${modify_rel_serno}
  ]]>
  </DELETE>
</SQL>

<!-- 根据modify_rel_serno删除账户信息备份信息 -->
<SQL id="deleteIqpCusAcctHisByM"  parameterClass="com.ecc.emp.data.KeyedCollection" >
  <DELETE>
  <![CDATA[
 	DELETE FROM IQP_CUS_ACCT_HIS P WHERE P.MODIFY_REL_SERNO =${modify_rel_serno}
  ]]>
  </DELETE>
</SQL>

<!-- 根据modify_rel_serno,pk_id删除账户信息缓存信息 -->
<SQL id="deleteIqpCusAcctTmpByMP"  parameterClass="com.ecc.emp.data.KeyedCollection" >
  <DELETE>
  <![CDATA[
 	DELETE FROM IQP_CUS_ACCT_TMP P WHERE P.MODIFY_REL_SERNO =${modify_rel_serno} and P.PK_ID= ${pk_id}
  ]]>
  </DELETE>
</SQL>

<!-- 根据modify_rel_serno编号更新汇票明细信息-->
<SQL id="updateIqpAccpDetailTmpByM" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass ="java.util.HashMap" >
   <UPDATE>
  <![CDATA[
	update iqp_accp_detail_tmp a
   	set a.clt_person = ${clt_person},
        a.term_type = ${term_type},
       	a.term = ${term}
 		where  a.modify_rel_serno = ${modify_rel_serno} and a.pk1 = ${pk1} 
  ]]>
   </UPDATE>
</SQL>
<!-- 根据modify_rel_serno编号更新附加条款信息-->
<SQL id="updateIqpAppendTermsTmpByM" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass ="java.util.HashMap" >
   <UPDATE>
  <![CDATA[
	update iqp_append_terms_tmp a
   	set a.chrg_date   = ${chrg_date},
       a.chrg_freq     = ${chrg_freq},
       a.collect_type  = ${collect_type},
       a.fee_acct_no = ${fee_acct_no},
			 a.fee_amt = ${fee_amt},
			 a.fee_code = ${fee_code},
			 a.fee_cur_type = ${fee_cur_type},
			 a.fee_rate = ${fee_rate},
			 a.fee_type = ${fee_type},
			 a.is_cycle_chrg = ${is_cycle_chrg}
 		where a.modify_rel_serno = ${modify_rel_serno} and a.append_terms_pk = ${append_terms_pk} 
  ]]>
   </UPDATE>
</SQL>
<!-- 根据serno编号回收放款审查退回修改权限-->
<SQL id="updatePvpLoanModifyRight" parameterClass="java.lang.String"  valueClass ="java.lang.String">
  <SELECT>
  <![CDATA[
  	update pvp_loan_app set approve_modify_right = ${_SIG_VALUE} where serno = ${_SIG_VALUE}
  ]]>
  </SELECT>
</SQL>
<!-- 根据serno编号回收放款审查退回修改权限-->
<SQL id="updatePvpExtensionModifyRight" parameterClass="java.lang.String"  valueClass ="java.lang.String">
  <SELECT>
  <![CDATA[
  	update iqp_Extension_pvp set approve_modify_right = ${_SIG_VALUE} where serno = ${_SIG_VALUE}
  ]]>
  </SELECT>
</SQL>

<SQL id="updateGrtLoanRGurTmp" parameterClass="com.ecc.emp.data.KeyedCollection" >
   <UPDATE>
  <![CDATA[
		update Grt_Loan_R_Gur t1
		   set t1.guar_amt = (select t2.guar_amt
		                        from Grt_Loan_R_Gur_Tmp t2
		                       where t1.guar_cont_no = t2.guar_cont_no
		                         and t2.biz_serno = ${BIZ_SERNO})
		 where t1.cont_no = ${CONT_NO}
  ]]>
   </UPDATE>
</SQL>

<SQL id="createIqpAccpDetailTmpRecord" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass="com.ecc.emp.data.KeyedCollection">
   <INSERT>
  <![CDATA[
   insert into iqp_accp_detail_tmp
     select  ${MODIFY_REL_SERNO},
         pk1,
         serno,
         clt_person,
         clt_acct_no,
         paorg_no,
         paorg_name,
         drft_amt,
         term_type,
         term,
				 bill_isse_date,
        bill_expiry_date,
        porder_no,
       batch_no
    from iqp_accp_detail
   where serno = ${FOUNT_SERNO}
  ]]>
   </INSERT>
</SQL>

<SQL id="createIqpAccpDetailHisRecord" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass="com.ecc.emp.data.KeyedCollection">
   <INSERT>
  <![CDATA[
   insert into iqp_accp_detail_his
     select ${MODIFY_REL_SERNO}, 
     	 pk1,
         serno,
         clt_person,
         clt_acct_no,
         paorg_no,
         paorg_name,
         drft_amt,
         term_type,
         term,
		 bill_isse_date,
        bill_expiry_date,
        porder_no,
       batch_no
    from iqp_accp_detail
   where serno = ${FOUNT_SERNO}
  ]]>
   </INSERT>
</SQL>

<SQL id="createPubBailInfoTmpRecord" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass="com.ecc.emp.data.KeyedCollection">
   <INSERT>
  <![CDATA[
   insert into pub_bail_info_tmp
  	select ${MODIFY_REL_SERNO},
					serno,
					cus_id,
					bail_acct_no,
					bail_acct_name,
					cur_type,
					rate,
					up_rate,
					bail_type,
					dep_term,
					open_org,
					cont_no,
					bail_status,
					bail_acct_gl_code,
					interbank_id
    from pub_bail_info
   where serno = ${FOUNT_SERNO}
  ]]>
   </INSERT>
</SQL>

<SQL id="createPubBailInfoHisRecord" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass="com.ecc.emp.data.KeyedCollection">
   <INSERT>
  <![CDATA[
   insert into pub_bail_info_his
  	select        ${MODIFY_REL_SERNO},
  					serno,
					cus_id,
					bail_acct_no,
					bail_acct_name,
					cur_type,
					rate,
					up_rate,
					bail_type,
					dep_term,
					open_org,
					cont_no,
					bail_status,
					bail_acct_gl_code,
					interbank_id
    from pub_bail_info
   where serno = ${FOUNT_SERNO}
  ]]>
   </INSERT>
</SQL>

<SQL id="createIqpAppendTermsTmpRecord" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass="com.ecc.emp.data.KeyedCollection">
   <INSERT>
  <![CDATA[
   insert into iqp_append_terms_tmp
  select ${MODIFY_REL_SERNO},
			serno,
			fee_code,
			fee_type,
			fee_amt,
			fee_cur_type,
			fee_rate,
			is_cycle_chrg,
			chrg_date,
			collect_type,
			fee_acct_no,
			append_terms_pk,
			chrg_freq
    from iqp_append_terms
   where serno =  ${FOUNT_SERNO}
  ]]>
   </INSERT>
</SQL>

<SQL id="createIqpAppendTermsHisRecord" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass="com.ecc.emp.data.KeyedCollection">
   <INSERT>
  <![CDATA[
   insert into iqp_append_terms_his
  select    ${MODIFY_REL_SERNO},
  			serno,
			fee_code,
			fee_type,
			fee_amt,
			fee_cur_type,
			fee_rate,
			is_cycle_chrg,
			chrg_date,
			collect_type,
			fee_acct_no,
			append_terms_pk,
			chrg_freq
    from iqp_append_terms
   where serno =  ${FOUNT_SERNO}
  ]]>
   </INSERT>
</SQL>

<SQL id="createIqpFreedomPayInfoTmpRecord" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass="com.ecc.emp.data.KeyedCollection">
   <INSERT>
  <![CDATA[
   insert into iqp_freedom_pay_info_tmp
     select  ${MODIFY_REL_SERNO},
	 serno,
     dateno,
     suppose_pay_amt,
     suppose_pay_cap,
     suppose_pay_int,
     rate,
     odint_rate,
     pay_date
    from iqp_freedom_pay_info
   where serno = ${FOUNT_SERNO}
  ]]>
   </INSERT>
</SQL>

<SQL id="createIqpFreedomPayInfoHisRecord" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass="com.ecc.emp.data.KeyedCollection">
   <INSERT>
  <![CDATA[
   insert into iqp_freedom_pay_info_his
     select  ${MODIFY_REL_SERNO},
	 serno,
     dateno,
     suppose_pay_amt,
     suppose_pay_cap,
     suppose_pay_int,
     rate,
     odint_rate,
     pay_date
    from iqp_freedom_pay_info
   where serno = ${FOUNT_SERNO}
  ]]>
   </INSERT>
</SQL>

<SQL id="createIqpCusAcctTmpRecord" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass="com.ecc.emp.data.KeyedCollection">
   <INSERT>
  <![CDATA[
   insert into iqp_cus_acct_tmp
  select ${MODIFY_REL_SERNO},
         serno,
         cont_no,
         acct_attr,
         is_this_org_acct,
         acct_no,
         acct_name,
         opac_org_no,
         opan_org_name,
         pay_amt,
         pk_id,
         acct_gl_code,
         cur_type,
         interbank_id
    from iqp_cus_acct
   where cont_no = ${CONT_NO}
  ]]>
   </INSERT>
</SQL>

<SQL id="createIqpCusAcctHisRecord" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass="com.ecc.emp.data.KeyedCollection">
   <INSERT>
  <![CDATA[
   insert into iqp_cus_acct_his
  select ${MODIFY_REL_SERNO},
         serno,
         cont_no,
         acct_attr,
         is_this_org_acct,
         acct_no,
         acct_name,
         opac_org_no,
         opan_org_name,
         pay_amt,
         pk_id,
         acct_gl_code,
         cur_type,
         interbank_id
    from iqp_cus_acct
   where cont_no = ${CONT_NO}
  ]]>
   </INSERT>
</SQL>

<SQL id="createGrtLoanRGurTmpRecord" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass="com.ecc.emp.data.KeyedCollection">
   <INSERT>
  <![CDATA[
   insert into grt_loan_r_gur_tmp
  select ${MODIFY_REL_SERNO}, GUAR_CONT_NO, GUAR_AMT
    from grt_loan_r_gur
   where cont_no = ${CONT_NO}
  ]]>
   </INSERT>
</SQL>

<!-- add by lisj 2015-8-26  需求编号：【XD150303015】 关于增加对被放款审查岗打回的业务申请信息进行修改流程需求  end-->
</S>