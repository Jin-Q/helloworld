<?xml version="1.0" encoding="UTF-8"?>
<S>
<!-- 关联查询共有人信息表  -->
<SQL id="queryCommenList" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection">
   <SELECT>
  <![CDATA[
	select a.cus_id,a.cus_name,a.cus_type,a.cert_type,a.cert_code from cus_base a where a.cus_id in (select commen_owner_no from mort_commen_owner where guaranty_no = ${_SIG_VALUE})
  ]]>
   </SELECT>
</SQL>

<!-- 新增货物与监管协议关系记录  -->
<SQL id="insertIqpCargoOverseeReRecord" parameterClass="java.lang.String" valueClass ="java.util.HashMap" >
   <INSERT>
  <![CDATA[
	insert into iqp_cargo_oversee_re (agr_type,agr_no,guaranty_no) values(${agr_type},${agr_no},${guaranty_no})
  ]]>
   </INSERT>
</SQL>
<!-- 关联查询权证信息表  -->
<SQL id="queryMortGuarantyCertiInfoDetail" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection">
  <SELECT>
  <![CDATA[
	select * from Mort_Guaranty_Certi_Info where guaranty_no= ${_SIG_VALUE} and is_main_warrant = '1'
  ]]>
  </SELECT>
</SQL>
<!-- 删除押品记录时级联删除共有人信息  -->
<SQL id="deleteMortCommenRecord" parameterClass="java.lang.String">
  <DELETE>
  <![CDATA[
	delete from mort_commen_owner where guaranty_no=${_SIG_VALUE}
  ]]>
  </DELETE>
</SQL>
<!-- 删除押品记录时级联删除证券信息  -->
<SQL id="deleteMortCertiRecord" parameterClass="java.lang.String">
  <DELETE>
  <![CDATA[
	delete from mort_guaranty_certi_info where guaranty_no=${_SIG_VALUE}
  ]]>
  </DELETE>
</SQL>
<!-- 删除押品记录时级联删除评估价值信息  -->
<SQL id="deleteMortEvalValueRecord" parameterClass="java.lang.String">
  <DELETE>
  <![CDATA[
	delete from mort_guaranty_eval_value where guaranty_no=${_SIG_VALUE}
  ]]>
  </DELETE>
</SQL>
<!-- 删除押品记录时级联删除意外信息  -->
<SQL id="deleteMortSuddenRecord" parameterClass="java.lang.String">
  <DELETE>
  <![CDATA[
	delete from mort_guaranty_sudden_info where guaranty_no=${_SIG_VALUE}
  ]]>
  </DELETE>
</SQL>
<!-- 删除押品记录时级联删除保险信息  -->
<SQL id="deleteMortInsurRecord" parameterClass="java.lang.String">
  <DELETE>
  <![CDATA[
	delete from mort_guaranty_insur_info where guaranty_no=${_SIG_VALUE}
  ]]>
  </DELETE>
</SQL>
<!-- 删除押品记录时级联删除监管协议与货物的关联记录  -->
<SQL id="deleteCarOverReRecord" parameterClass="java.lang.String">
  <DELETE>
  <![CDATA[
	delete from iqp_cargo_oversee_re where guaranty_no=${_SIG_VALUE}
  ]]>
  </DELETE>
</SQL>
<!-- 抵质押品与担保合同的关联信息表查询 -->
<SQL id="queryMortTabList" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection">
  <SELECT>
  <![CDATA[
  select a.guaranty_cls,a.guaranty_no,a.cus_id,a.guaranty_name,a.guaranty_type,b.wrr_amt,b.guar_amt,a.guaranty_info_status 
 from mort_guaranty_base_info a 
 left join  mort_guaranty_eval_value b on a.guaranty_no=b.guaranty_no
 where a.guaranty_no in (select c.guaranty_id from grt_guaranty_re c where c.guar_cont_no=${_SIG_VALUE})
  ]]>
  </SELECT>
</SQL>
<!-- 根据押品编号查询获取监管协议与货物 的关系表获取监管协议编号 -->
<SQL id="queryCarOverReRecordDetail" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection">
  <SELECT>
  <![CDATA[
	select * from Iqp_Cargo_OVERSEE_Re a where a.guaranty_no=${_SIG_VALUE}
  ]]>
  </SELECT>
</SQL>

<!-- 根据押品编号获取押品下关联的货物库存总价值或入库待登记货物的总价值（商链通） -->
<SQL id="queryIdentyTotalInfo" parameterClass="java.util.HashMap" resultClass="com.ecc.emp.data.KeyedCollection">
  <SELECT>
  <![CDATA[
	select nvl(sum(IDENTY_TOTAL),0) as identy_total from mort_cargo_pledge where guaranty_no=${guaranty_no} and cargo_status=${cargo_status}
  ]]>
  </SELECT>
</SQL>

<!-- 根据关联业务编号获取押品下关联的货物库存总价值或入库待登记货物的总价值（商链通） -->
<SQL id="queryCargoReplListTotalInfo" parameterClass="java.util.HashMap" resultClass="com.ecc.emp.data.KeyedCollection">
  <SELECT>
  <![CDATA[
	select nvl(sum(IDENTY_TOTAL),0) as identy_total from mort_cargo_repl_list where serno=${serno} and cargo_status=${cargo_status}
  ]]>
  </SELECT>
</SQL>

<!-- 批量更改押品关联下货物的状态（商链通），更改状态的同时设置出库时间  -->
<SQL id="updateStatusExwareDateBatch" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass ="com.ecc.emp.data.KeyedCollection">
  <UPDATE>
  <![CDATA[
	update Mort_Cargo_Pledge a set a.cargo_status =${cargoStatus},a.exware_date=${exwareDate} where a.cargo_status=${cargo_status} and a.guaranty_no=${guaranty_no} 
  ]]>
  </UPDATE>
</SQL>

<!-- 批量更改押品关联下货物的状态（商链通），更改状态的同时设置入库的时间  -->
<SQL id="updateStatusStorageBatch" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass ="com.ecc.emp.data.KeyedCollection">
  <UPDATE>
  <![CDATA[
	update Mort_Cargo_Pledge a set a.cargo_status =${cargoStatus},a.storage_date=${storageDate} where a.cargo_status=${cargo_status} and a.guaranty_no=${guaranty_no} 
  ]]>
  </UPDATE>
</SQL>
<!-- 根据押品编号查询入库管理表中处于登记 状态的记录-->
<SQL id="queryRegiRecord" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection">
  <SELECT>
  <![CDATA[
	select a.serno from mort_cargo_storage a where a.guaranty_no=${_SIG_VALUE} and a.status='00'
  ]]>
  </SELECT>
</SQL>
<!-- 根据押品编号查询出库管理表中处于登记 状态的记录-->
<SQL id="queryRegiOutStorRecord" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection">
  <SELECT>
  <![CDATA[
	select a.serno from mort_cargo_exware a where a.guaranty_no=${_SIG_VALUE} and a.status='00'
  ]]>
  </SELECT>
</SQL>
<!-- 获取押品记录（pop）-->
<SQL id="queryGuarantyRecordPop" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection">
  <SELECT>
  <![CDATA[
    select a.guaranty_no,a.guaranty_name,b.agr_no,a.cus_id,a.guaranty_cls,a.guaranty_type,a.guaranty_info_status,a.input_id,a.input_br_id,a.input_date from mort_guaranty_base_info a,Iqp_Cargo_OVERSEE_Re b where a.guaranty_no = b.guaranty_no and a.guaranty_info_status ='2' and ${_SIG_VALUE}  
  ]]>
  </SELECT>
</SQL>
<!-- 根据押品编号查询处于登记状态的提货清单记录-->
<SQL id="queryMortDelivList" parameterClass="com.ecc.emp.data.KeyedCollection" resultClass="com.ecc.emp.data.KeyedCollection">
  <SELECT>
  <![CDATA[
	select serno,cargo_id from mort_deliv_list where guaranty_no=${guaranty_no} and op_type = ${op_type}
  ]]>
  </SELECT>
</SQL>
<!-- 根据押品编号将处于登记状态的提货清单记录更新为已记账状态-->
<SQL id="updateMortDelivList" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass ="java.lang.String">
  <UPDATE>
  <![CDATA[
	update mort_deliv_list a set a.cargo_status = ${_SIG_VALUE} where a.cargo_status=${cargo_status} and a.re_serno=${serno} 
  ]]>
  </UPDATE>>
</SQL>
<!-- 根据押品编号更新其货物的在库数量和在库总价值-->
<SQL id="updatemortCargoPledge" parameterClass="java.lang.String">
  <UPDATE>
  <![CDATA[
update mort_cargo_pledge p1
   set (p1.qnt, p1.identy_total, p1.cargo_status, p1.exware_date) = (select p2.surplus_qnt, 
                                           									p2.surplus_value,
                                           									case when p2.surplus_qnt = 0 then '03' else '02' end as cargo_status,
                                           									case when p2.surplus_qnt = 0 then (select openday from pub_sys_info) else '' end as exware_date
                                      								   from mort_deliv_list p2
                                     								  where p1.cargo_id = p2.cargo_id
                                       									and p2.re_serno =${_SIG_VALUE})
 where exists (select 1
          from mort_deliv_list p2
         where p1.cargo_id = p2.cargo_id
           and p2.re_serno = ${_SIG_VALUE})
   and p1.guaranty_no =
       (select p3.guaranty_no
          from mort_bail_deliv p3
         where p3.serno = ${_SIG_VALUE})
  ]]>
  </UPDATE>
</SQL>

<!-- 根据押品编号获取押品下关联的货物库存总价值或入库待登记货物的总价值（货物置换清单） -->
<SQL id="queryIdentyTotalInfoRepl" parameterClass="java.util.HashMap" resultClass="com.ecc.emp.data.KeyedCollection">
  <SELECT>
  <![CDATA[
	select nvl(sum(IDENTY_TOTAL),0) as identy_total from mort_cargo_repl_list where guaranty_no=${guaranty_no} and cargo_status=${cargo_status} and oper = ${oper}
  ]]>
  </SELECT>
</SQL>
<!-- 批量更改押品关联下货物的状态（货物质押清单） -->
<SQL id="updateStatusBatchCargoRepl" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass ="java.lang.String">
  <UPDATE>
  <![CDATA[
	update mort_cargo_repl_list a set a.cargo_status =${_SIG_VALUE} where a.cargo_status=${cargo_status} and a.guaranty_no=${guaranty_no} and a.serno=${serno}
  ]]>
  </UPDATE>
</SQL>
<!-- 货物置换时，新增货物记录 -->
<SQL id="insertmortCargoPledge" parameterClass="com.ecc.emp.data.KeyedCollection">
  <INSERT>
  <![CDATA[
     insert into mort_cargo_pledge
       (cargo_id,          guaranty_no,  cargo_name,   guaranty_catalog,
        at_store,          disp_bill_no, produce_area, produce_vender,
   		sale_area,         model,        value_unit,   qnt,
   		identy_unit_price, identy_total, storage_date, exware_date,
  		memo,              cargo_status, input_id,     input_br_id,
   		reg_date,          value_no)
       select cargo_id,          guaranty_no,  cargo_name,   guaranty_catalog,
              at_store,          disp_bill_no, produce_area, produce_vender,
         	  sale_area,         model,        value_unit,   qnt,
              identy_unit_price, identy_total, storage_date, exware_date,
              memo,              cargo_status, input_id,     input_br_id,
              reg_date,          value_no
         from mort_cargo_repl_list a
        where a.cargo_status = ${cargo_status}
          and a.guaranty_no = ${guaranty_no}
          and not exists (select 1 from mort_cargo_pledge 
                             where a.cargo_status = ${cargo_status}
                               and a.guaranty_no = ${guaranty_no} )
  ]]>
  </INSERT>>
</SQL>

<!-- 货物置换时，新增货物记录 -->
<SQL id="insertmortCargoPledge4ZH" parameterClass="com.ecc.emp.data.KeyedCollection">
  <INSERT>
  <![CDATA[
     insert into mort_cargo_pledge
       (cargo_id,          guaranty_no,  cargo_name,   guaranty_catalog,
        at_store,          disp_bill_no, produce_area, produce_vender,
   		sale_area,         model,        value_unit,   qnt,
   		identy_unit_price, identy_total, storage_date, exware_date,
  		memo,              cargo_status, input_id,     input_br_id,
   		reg_date,          value_no)
       select cargo_id,          guaranty_no,  cargo_name,   guaranty_catalog,
              at_store,          disp_bill_no, produce_area, produce_vender,
         	  sale_area,         model,        value_unit,   qnt,
              identy_unit_price, identy_total, (select openday from pub_sys_info where sys_id = '10001'), exware_date,
              memo,              cargo_status, input_id,     input_br_id,
              reg_date,          value_no
         from mort_cargo_repl_list a
        where a.serno = ${serno}
          and a.cargo_status = ${cargo_status}
  ]]>
  </INSERT>>
</SQL>

<!-- 货物置换时，新增提货记录 -->
<SQL id="insertMortDelivList" parameterClass="com.ecc.emp.data.KeyedCollection">
  <INSERT>
  <![CDATA[
     insert into mort_deliv_list (select * from mort_cargo_pledge a where a.cargo_status=${cargo_status} and a.guaranty_no = ${guaranty_no})  
     ]]>
  </INSERT>
</SQL>

<!-- 置换记账时，根据业务编号删除临时表中的数据 -->
<SQL id="deleteMortDelivListBySerno" parameterClass="java.lang.String">
  <DELETE>
  <![CDATA[
     delete from Mort_DELIV_LIST a where a.re_serno=${_SIG_VALUE} and a.deliv_value is null or a.deliv_value=0
     ]]>
  </DELETE>
</SQL>

<!-- 保证金提货时，删除保证金提货流水记录的同时删除提货清单中的数据 -->
<SQL id="deleteMortDelivListByGuarantyNo" parameterClass="java.lang.String">
  <DELETE>
  <![CDATA[
     delete from Mort_DELIV_LIST a where a.guaranty_no=${_SIG_VALUE} and a.cargo_status ='00'
     ]]>
  </DELETE>
</SQL>
<!-- 删除权证出库申请时，同时删除申请明细信息  -->
<SQL id="deleteMortStorExwaDetailBySerno" parameterClass="java.lang.String">
  <DELETE>
  <![CDATA[
	delete from mort_stor_exwa_detail where serno=${_SIG_VALUE}
  ]]>
  </DELETE>
</SQL>
<!-- 货物动态出入库时，向提货清单表中存入货物的历史数据记录-->
<SQL id="insertMortDelivListByStatus" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass ="com.ecc.emp.data.KeyedCollection">
  <INSERT>
  <![CDATA[
  insert into MORT_CARGO_REPL_LIST
  (select CARGO_ID,
          GUARANTY_NO,
          CARGO_NAME,
          GUARANTY_CATALOG,
          AT_STORE,
          DISP_BILL_NO,
          PRODUCE_AREA,
          PRODUCE_VENDER,
          SALE_AREA,
          MODEL,
          VALUE_UNIT,
          QNT,
          IDENTY_UNIT_PRICE,
          IDENTY_TOTAL,
          STORAGE_DATE,
          EXWARE_DATE,
          MEMO,
          CARGO_STATUS,
          INPUT_ID,
          INPUT_BR_ID,
          REG_DATE,
          VALUE_NO, 
          ${serno},
          ${oper}
     from Mort_Cargo_Pledge
    where guaranty_no = ${guaranty_no}
      and CARGO_STATUS = ${cargo_status})
  ]]>
  </INSERT>
</SQL>
<!-- 补货入库时，保存操作，将申请流水号赋值给新增补货的货物-->
<SQL id="updateMortCargoReplList" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass ="java.lang.String">
  <UPDATE>
  <![CDATA[
    update mort_cargo_repl_list a set a.serno=${_SIG_VALUE} where a.guaranty_no=${guaranty_no} and a.serno=${serno} and CARGO_STATUS =${cargo_status} and oper='2'
  ]]>
  </UPDATE>>
</SQL>
<!-- 补货入库记账时，将数据插入货物清单表（结果表）-->
<SQL id="insertMortCargoPledgeBySerno" parameterClass="com.ecc.emp.data.KeyedCollection" >
  <INSERT>
  <![CDATA[  
  insert into Mort_Cargo_Pledge
  (select CARGO_ID,
          GUARANTY_NO,
          CARGO_NAME,
          GUARANTY_CATALOG,
          AT_STORE,
          DISP_BILL_NO,
          PRODUCE_AREA,
          PRODUCE_VENDER,
          SALE_AREA,
          MODEL,
          VALUE_UNIT,
          QNT,
          IDENTY_UNIT_PRICE,
          IDENTY_TOTAL,
          STORAGE_DATE,
          EXWARE_DATE,
          MEMO,
          CARGO_STATUS,
          INPUT_ID,
          INPUT_BR_ID,
          REG_DATE,
          VALUE_NO
     from MORT_CARGO_REPL_LIST
    where SERNO = ${serno}
      and OPER = ${oper}
      and CARGO_STATUS='04'
      )
  ]]>
  </INSERT>
</SQL>

<!-- 提货或者货物置换时，更新提货清单中关联业务流水号字段-->
<SQL id="updateMortDelivListOper" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass ="java.lang.String">
  <UPDATE>
  <![CDATA[
	update Mort_DELIV_LIST a set a.re_serno =${_SIG_VALUE} where a.guaranty_no=${guaranty_no} and a.op_type=${op_type} and a.re_serno is null
  ]]>
  </UPDATE>>
</SQL>

<!-- 根据押品编号更新押品信息状态 -->
<SQL id="updateMortGuarantyBaseInfo" parameterClass="java.lang.String" valueClass ="java.lang.String">
  <UPDATE>
  <![CDATA[
	update mort_guaranty_base_info a set a.guaranty_info_status =${_SIG_VALUE} where a.guaranty_no=${_SIG_VALUE}
  ]]>
  </UPDATE>>
</SQL>
<!-- 根据押品编号更新押品信息状态 -->
<SQL id="updateMortGuarantyCertiInfo" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass ="com.ecc.emp.data.KeyedCollection">
  <UPDATE>
  <![CDATA[
	update mort_guaranty_certi_info a set a.warrant_state =${warrant_state},a.sys_update_time = ${sys_update_time} where a.warrant_type=${warrant_type} and a.warrant_no=${warrant_no}
  ]]>
  </UPDATE>>
</SQL>
<!-- 根据权证编号，权证类型更新权证明细信息状态 -->
<SQL id="updateMortStorExwaDetail" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass ="com.ecc.emp.data.KeyedCollection">
  <UPDATE>
  <![CDATA[
	 update Mort_Stor_Exwa_Detail
        set warrant_state = ${warrant_state}
      where warrant_type = ${warrant_type}
        and warrant_no = ${warrant_no}
        and serno = (select max(a.serno)
                       from Mort_Stor_Exwa_Detail a
                      where a.warrant_type = ${warrant_type}
                        and a.warrant_no = ${warrant_no})
  ]]>
  </UPDATE>
</SQL>
<!-- 判断是否 存在未核销出库的权证数量-->
<SQL id="checkMortGuarantyCertiInfo" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection" onlyReturnFirst="false" >
  <SELECT>
  <![CDATA[
   select count(*) as cc from mort_guaranty_certi_info a where a.warrant_state not in ('6','7','1') and a.guaranty_no = ${_SIG_VALUE}
  ]]>
  </SELECT>
</SQL>

<!-- 通过授权编号查询出入库方式  -->
<SQL id="queryModeByAuthNo" parameterClass="java.lang.String"  resultClass="com.ecc.emp.data.KeyedCollection" onlyReturnFirst="false" >
   <SELECT>
  <![CDATA[
	select m.stor_exwa_mode,m.exwa_type from mort_stor_exwa_info m, pvp_authorize p where m.serno = p.serno and p.authorize_no =${_SIG_VALUE} 
  ]]>
   </SELECT>
</SQL>

<!-- 根据押品变更后价格更新货物价格  -->
<SQL id="updateMortCargoPledgeAmt" parameterClass="java.lang.String" valueClass="java.lang.String" >
   <UPDATE>
  <![CDATA[
  	UPDATE MORT_CARGO_PLEDGE t SET t.IDENTY_UNIT_PRICE = ${_SIG_VALUE},t.IDENTY_TOTAL = t.QNT*${_SIG_VALUE} WHERE t.VALUE_NO = ${_SIG_VALUE}
  ]]>
   </UPDATE>
</SQL>

<!-- 权证出库时修改权证状态  -->
<SQL id="updateMortCertiStatus" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass="java.lang.String" >
   <UPDATE>
  <![CDATA[
  	UPDATE MORT_GUARANTY_CERTI_INFO SET WARRANT_STATE = ${_SIG_VALUE} WHERE WARRANT_TYPE=${warrant_type} AND WARRANT_NO=${warrant_no}
  ]]>
   </UPDATE>
</SQL>
<!-- 根据票据编号更新票据池票据信息状态 -->
<SQL id="updateIqpBillDetailInfo" parameterClass="java.lang.String" valueClass ="java.lang.String">
  <UPDATE>
  <![CDATA[
	update iqp_bill_detail_info a set a.status =${_SIG_VALUE} where a.porder_no=${_SIG_VALUE}
  ]]>
  </UPDATE>>
</SQL>
<!-- 根据池编号、汇票号码查询票据池关联表，返回状态 -->
<SQL id="queryIqpCorreInfo" parameterClass="com.ecc.emp.data.KeyedCollection" resultClass="java.lang.String" onlyReturnFirst="true">
  <SELECT>
  <![CDATA[
  SELECT status FROM iqp_corre_info WHERE drfpo_no=${drfpo_no} AND porder_no=${porder_no}
  ]]>
  </SELECT> 
</SQL>
<!-- 票据池出库时修改状态  -->
<SQL id="updateIqpCorreInfoStatus" parameterClass="com.ecc.emp.data.KeyedCollection" valueClass="java.lang.String" >
   <UPDATE>
  <![CDATA[
  	UPDATE IQP_CORRE_INFO SET STATUS = ${_SIG_VALUE} WHERE DRFPO_NO=${drfpo_no} AND PORDER_NO=${porder_no}
  ]]>
   </UPDATE>
</SQL>
<!-- 更新票据池信息表 -->
<SQL id="updateIqpDrfpoMana" parameterClass="java.lang.String" valueClass ="java.util.HashMap" >
   <UPDATE>
  <![CDATA[
   update iqp_drfpo_mana set status = ${status},bill_amt = ${bill_amt}
     where drfpo_no = ${_SIG_VALUE}
  ]]>
   </UPDATE>
</SQL>
<!-- 通过池编号查询  -->
<SQL id="queryIqpActrecbondDetail" parameterClass="java.lang.String"  resultClass="com.ecc.emp.data.KeyedCollection" onlyReturnFirst="false" >
   <SELECT>
  <![CDATA[
	select count(*) as invcquant,
       nvl(sum(invc_amt), 0) as invcamt,
       nvl(sum(bond_amt), 0) as bondamt
  from iqp_actrecbond_detail
 WHERE po_no =${_SIG_VALUE} 
   and status = '2'
  ]]>
   </SELECT>
</SQL>
<!-- 根据编号更新应收账款(保理)池票据信息状态 -->
<SQL id="updateIqpActrecbondDetail" parameterClass="java.lang.String" valueClass ="java.lang.String">
  <UPDATE>
  <![CDATA[
	update iqp_actrecbond_detail a set a.status =${_SIG_VALUE} where a.invc_no||'#'||a.cont_no=${_SIG_VALUE}
  ]]>
  </UPDATE>>
</SQL>
<!-- 更新IqpActrecpoMana更新池状态为生效 -->
<SQL id="updateIqpActrecpoMana" parameterClass="java.lang.String" valueClass ="java.util.HashMap">
   <UPDATE>
  <![CDATA[
	update iqp_actrecpo_mana set invc_quant = ${invc_quant},invc_amt = ${invc_amt},crd_rgtchg_amt=${crd_rgtchg_amt},status=${status} where po_no = ${_SIG_VALUE}
  ]]>
   </UPDATE>
</SQL>
<!--add by lisj 2015-10-26 需求编号：XD150710052 新增对【押品所有权是否为非关联方第三人】录入信息控制-->
<SQL id="queryIsLowRiskByGCN" parameterClass="java.lang.String" resultClass="com.ecc.emp.data.KeyedCollection" >
    <SELECT>
      <![CDATA[
		      select nvl(lrisk_type, '') as lrisk_type
        from (select p1.lrisk_type
                from lmt_apply p1
               where p1.serno in
                     (select g.serno
                        from r_lmt_app_guar_cont g
                       where g.guar_cont_no = ${_SIG_VALUE})
              union
              select p2.lrisk_type
                from lmt_app_indiv p2
               where p2.serno in
                     (select g.serno
                        from r_lmt_app_guar_cont g
                       where g.guar_cont_no = ${_SIG_VALUE}))
      ]]>
    </SELECT>
</SQL>

</S>
